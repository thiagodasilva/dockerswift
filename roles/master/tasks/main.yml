- name: install cloud sig
  package: name=centos-release-openstack-ocata state=present
  
- name: install utility programs
  yum: name={{ item }} state=present
  with_items:
    - python-swift
    - python2-swiftclient

- name: set correct terminal in bashrc
  lineinfile:
      dest: /home/vagrant/.bashrc
      regexp: '^export TERM='
      line: 'export TERM=xterm'

- name: set correct editor in bashrc
  lineinfile:
      dest: /home/vagrant/.bashrc
      regexp: '^export EDITOR='
      line: 'export EDITOR=vim'

- name: set kubectl alias in bashrc
  lineinfile:
      dest: /home/vagrant/.bashrc
      regexp: '^alias kk='
      line: 'alias kk=kubectl'

- name: create
  command: kubeadm init --token={{ kubernetes_token }} --apiserver-advertise-address={{ ansible_eth1.ipv4.address }}
  
- name: copy admin.conf
  command: cp /etc/kubernetes/admin.conf /home/vagrant/

- name: configure permissions for admin.conf
  command: chown vagrant:vagrant /home/vagrant/admin.conf

- name: set correct editor in bashrc
  lineinfile:
      dest: /home/vagrant/.bashrc
      line: 'export KUBECONFIG=$HOME/admin.conf'

- name: get jq
  command: wget http://stedolan.github.io/jq/download/linux64/jq

- name: make jq executable
  command: chmod +x jq

- name: move jq to /usr/bin
  command: mv jq /usr/bin

- name: Fix kube-proxy
  shell: kubectl --kubeconfig /etc/kubernetes/admin.conf -n kube-system get ds -l 'k8s-app=kube-proxy' -o json | jq '.items[0].spec.template.spec.containers[0].command |= .+ ["--proxy-mode=userspace"]' |   kubectl --kubeconfig /etc/kubernetes/admin.conf apply -f - && kubectl --kubeconfig /etc/kubernetes/admin.conf -n kube-system delete pods -l 'k8s-app=kube-proxy'

- name: create cluster network
  command: kubectl --kubeconfig /etc/kubernetes/admin.conf apply -f {{ kubeadm_network_addon_url }}

- name: get dns service address
  shell: kubectl --kubeconfig /etc/kubernetes/admin.conf get services --all-namespaces | grep kube-dns | awk "{print \$3}"
  register: kubednsaddress

- name: wait for dns to be ready
  wait_for: host={{ kubednsaddress.stdout }} port=53 state=started timeout=1800

- name: save iptables
  command: service iptables save
